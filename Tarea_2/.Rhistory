} # end else 1
}# While
}#Función
grafica <- function(f,i,d,t,color="red"){
#f_a <- function(x){sqrt(x)-cos(x)}
x <- seq(i, d, by=0.0001)
y <- f(x)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x, y=y), color=color, linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf_a)
}
graficas <- function(g,i,d,t){
f <- function(x){x}
#g <- function(x){(2-exp(x)+x^2)/3}
h <- function(x){g(x)-f(x)}
graf <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
geom_function(fun=f,color="red",linewidth=0.75,n=200)+
geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(i,d)+
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf)
}
f <- function(x){sqrt(x)-cos(x)}
grafica(f,0,1.5,"Primera gráfica")
graf_a <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_function(fun=f, color="red", linewidth=1, n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(0, 1.5)+
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
metodo_biseccion(f,0,1,1e-10,N=500)
bisect(f,0,1,500)
f <- function(x){x^3-7*x^2+14*x-6}
grafica(f,-1,5,"Segunda gráfica")
bisect(f,0,1,500)
bisect(f,1,3.2,500)
bisect(f,3.2,4,500)
f <- function(x){x-2^(-x)}
grafica(f,-1,2,"Gráfica 3.a)")
bisect(f,0,1,500)
f <- function(x){exp(x)-x^2+3*x-2}
grafica(f,-1,1,"Gráfica 3.b)")
bisect(f,0,1,500)
f <- function(x){2*x*cos(2*x)-(x+1)^2}
grafica(f,-4,1,"Gráfica 3.c)")
bisect(f,-3,-2,500)
bisect(f,-1,0,500)
f <- function(x){x*cos(x)-2*x^2+3*x-1}
grafica(f,0.1,1.4,"Gráfica 3.d)")
bisect(f,0.2,0.3,500)
bisect(f,1.2,1.3,500)
g <- function(x){2*sin(x)}
h <- function(x){2*sin(x)-x}
graficas(g,-5,5,"Gráfica 4")
bisect(h,1,2.5,500)
f <- function(x){(x+2)(x+1)x(x-1)^3(x-2)}
f <- function(x){(x+2)*(x+1)*x*(x-1)^3(x-2)}
grafica(f,-4,4"Gráfica 5")
f <- function(x){(x+2)*(x+1)*x*(x-1)^3(x-2)}
grafica(f,-4,4,"Gráfica 5")
f <- function(x){(x+2)*(x+1)*x*(x-1)^3(x-2)}
grafica(f,-4,4,"Gráfica 5")
f <- function(x){(x+2)*(x+1)*x*(x-1)^3(x-2)}
grafica(f,-2.5,3,"Gráfica 5")
f <- function(x){(x+2)*(x+1)*x*(x-1)^3(x-2)}
grafica(f,-2.5,3,"Gráfica 5")
grafica <- function(f,i,d,t,color="red"){
#f_a <- function(x){sqrt(x)-cos(x)}
x <- seq(i, d, by=0.0001)
y <- f(x)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x, y=y), color=color, linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf_a)
}
f <- function(x){(x+2)*(x+1)*x*(x-1)^3(x-2)}
grafica(f,-2.5,3,"Gráfica 5")
f <- function(x){(x+2)(x+1)x(x-1)^3(x-2)}
f <- function(x){(x+2)(x+1)x*(x-1)^3(x-2)}
f <- function(x){(x+2)(x+1)*x*(x-1)^3(x-2)}
grafica(f,-2.5,3,"Gráfica 5")
f <- function(x){(x+2)(x+1)*x*(x-1)^3(x-2)}
grafica(f,0.1,1.4,"Gráfica 3.d)")
f <- function(x){2*x*cos(2*x)-(x+1)^2}
grafica(f,-4,1,"Gráfica 3.c)")
f <- function(x){(x+2)*(x+1)*x*(x-1)^3*(x-2)}
grafica(f,0.1,1.4,"Gráfica 3.d)")
f <- function(x){(x+2)*(x+1)*x*(x-1)^3*(x-2)}
grafica(f,-4,4,"Gráfica 5")
f <- function(x){(x+2)*(x+1)*x*(x-2)*(x-1)^3}
grafica(f,-4,4,"Gráfica 5")
bisect(f,-3,2.5)
bisect(f,-3,-2.5)
bisect(f,-3,2.5)
bisect(f,-2.5,3,500)
bisect(f,-1.75,1.5)
bisect(f,-1.5,1.75)
graficas <- function(g,i,d,t){
f <- function(x){x}
#g <- function(x){(2-exp(x)+x^2)/3}
h <- function(x){g(x)-f(x)}
graf <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
geom_function(fun=f,color="red",linewidth=0.75,n=200)+
geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(i,d)+
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf)
}
g <- function(x){5/(x^2)+2}
graficas(g,-2,2,"6.b)")
g <- function(x){5/(x^2)+2}
graficas(g,-1,1,"6.b)")
g <- function(x){5/(x^2)+2}
graficas(g,-.1,.1,"6.b)")
g <- function(x){5/(x^2)+2}
graficas(g,-.01,.01,"6.b)")
g <- function(x){5/(x^2)+2}
graficas(g,-.0001,.0001,"6.b)")
g <- function(x){5/(x^2)+2}
graficas(g,-.00000001,.00000001,"6.b)")
g <- function(x){5/(x^2)+2}
graficas(g,-1,.1,"6.b)")
g <- function(x){5/(x^2)+2}
graficas(g,-1,1,"6.b)")
it_pf(g,0,pr=1e-10)
it_pf <- function(g, q0, pr=1e-5, N=100){
cond <- 1
it <- 1
q <- q0
while(cond==1){
if(it<=N){
q[it+1] = g(q[it]) # iteración de la función
pr_it <- abs(q[it+1]-q[it]) # precisión en la iteración
if(pr_it<pr){
resultados <- list(sucesion=q, precision=pr_it, iteraciones=it)
return(resultados)
cond <- 0
}#final del segundo if
else{it <- it+1}
}#final del primer if
else{
print("Se alcanzo el maximo de iteraciones")
cond <- 0
}#fin del else
}#final del while
}# final de la función
it_pf(g,0,pr=1e-10)
g <- function(x){5/(x^2)+2}
graficas(g,-3,3,"6.b)")
bisect(g,2,3)
bisect(g,-3,3)
bisect(g,-1,1)
bisect(g,-1,0)
bisect(g,0,1)
bisect(g,0,3)
#f <- function(x){x}
g <- function(x){sqrt(exp(x)/3)}
graficas(g,-2,2,"6.c)")
# h <- function(x){g(x)-f(x)}
#
# graf <- ggplot()+
#   #geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#   #geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#   #geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#   geom_function(fun=f,color="red",linewidth=0.75,n=200)+
#   geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
#   geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#   coord_fixed(ratio = 1)+ # misma escala en los ejes
#     xlim(-2,2)+
#   labs(x="x", y="f(x)", title="Primera gráfica")+
#   theme_bw()
#
#
# ggplotly(graf)
it_pf(g,1,pr=1e-10)
bisect(h,0,2)
#f <- function(x){x}
g <- function(x){sqrt(exp(x)/3)}
graficas(g,-2,2,"6.c)")
# h <- function(x){g(x)-f(x)}
#
# graf <- ggplot()+
#   #geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#   #geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#   #geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#   geom_function(fun=f,color="red",linewidth=0.75,n=200)+
#   geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
#   geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#   coord_fixed(ratio = 1)+ # misma escala en los ejes
#     xlim(-2,2)+
#   labs(x="x", y="f(x)", title="Primera gráfica")+
#   theme_bw()
#
#
# ggplotly(graf)
bisect(h,0,2)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
metodo_biseccion <- function(f_x, a,b,tol, N){
cond <-  1
it <- 0
A <- a
B <- b
p <- 0
while(cond==1){
it <- it+1
if(it<=N){#if 1
p[it] <- A[it]+(B[it]-A[it])/2
tol_it <- (B[it]-A[it])/2
if( f_x(p[it])==0 | tol_it<tol){#if 2
resultados <- list(aprox=p, precision=tol_it, iteraciones=it)
return(resultados)
cond <- 0
}# end if 2
else{ #else 2
if(f_x(A[it])*f_x(p[it])<0){# if 3
A[it+1] <- A[it]
B[it+1] <- p[it]
} # end if 3
else{# else 3
A[it+1] <- p[it]
B[it+1] <- B[it]
}# end else 3
} #end else 2
}#end if 1
else{ # else 1
print("Se alcanzó el máximo de iteraciones")
cond <- 0
} # end else 1
}# While
}#Función
grafica <- function(f,i,d,t,color="red"){
#f_a <- function(x){sqrt(x)-cos(x)}
x <- seq(i, d, by=0.0001)
y <- f(x)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x, y=y), color=color, linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf_a)
}
graficas <- function(g,i,d,t){
f <- function(x){x}
#g <- function(x){(2-exp(x)+x^2)/3}
h <- function(x){g(x)-f(x)}
graf <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
geom_function(fun=f,color="red",linewidth=0.75,n=200)+
geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(i,d)+
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf)
}
f <- function(x){sqrt(x)-cos(x)}
grafica(f,0,1.5,"Primera gráfica")
graf_a <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_function(fun=f, color="red", linewidth=1, n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(0, 1.5)+
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
metodo_biseccion(f,0,1,1e-10,N=500)
bisect(f,0,1,500)
f <- function(x){x^3-7*x^2+14*x-6}
grafica(f,-1,5,"Segunda gráfica")
bisect(f,0,1,500)
bisect(f,1,3.2,500)
bisect(f,3.2,4,500)
f <- function(x){x-2^(-x)}
grafica(f,-1,2,"Gráfica 3.a)")
bisect(f,0,1,500)
f <- function(x){exp(x)-x^2+3*x-2}
grafica(f,-1,1,"Gráfica 3.b)")
bisect(f,0,1,500)
f <- function(x){2*x*cos(2*x)-(x+1)^2}
grafica(f,-4,1,"Gráfica 3.c)")
bisect(f,-3,-2,500)
bisect(f,-1,0,500)
f <- function(x){x*cos(x)-2*x^2+3*x-1}
grafica(f,0.1,1.4,"Gráfica 3.d)")
bisect(f,0.2,0.3,500)
bisect(f,1.2,1.3,500)
g <- function(x){2*sin(x)}
h <- function(x){2*sin(x)-x}
graficas(g,-5,5,"Gráfica 4")
bisect(h,1,2.5,500)
f <- function(x){(x+2)*(x+1)*x*(x-2)*(x-1)^3}
grafica(f,-4,4,"Gráfica 5")
bisect(f,-3,2.5)
bisect(f,-2.5,3,500)
bisect(f,-1.75,1.5)
bisect(f,-1.5,1.75)
it_pf <- function(g, q0, pr=1e-5, N=100){
cond <- 1
it <- 1
q <- q0
while(cond==1){
if(it<=N){
q[it+1] = g(q[it]) # iteración de la función
pr_it <- abs(q[it+1]-q[it]) # precisión en la iteración
if(pr_it<pr){
resultados <- list(sucesion=q, precision=pr_it, iteraciones=it)
return(resultados)
cond <- 0
}#final del segundo if
else{it <- it+1}
}#final del primer if
else{
print("Se alcanzo el maximo de iteraciones")
cond <- 0
}#fin del else
}#final del while
}# final de la función
g <- function(x){(2-exp(x)+x^2)/3}
graficas(g,-2,2,"6.a)")
it_pf(g,0,pr=1e-10)
bisect(h,0,1)
g <- function(x){5/(x^2)+2}
graficas(g,-3,3,"6.b)")
it_pf(g,0,pr=1e-10)
#f <- function(x){x}
g <- function(x){sqrt(exp(x)/3)}
graficas(g,-2,2,"6.c)")
# h <- function(x){g(x)-f(x)}
#
# graf <- ggplot()+
#   #geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#   #geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#   #geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#   geom_function(fun=f,color="red",linewidth=0.75,n=200)+
#   geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
#   geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#   coord_fixed(ratio = 1)+ # misma escala en los ejes
#     xlim(-2,2)+
#   labs(x="x", y="f(x)", title="Primera gráfica")+
#   theme_bw()
#
#
# ggplotly(graf)
it_pf(g,1,pr=1e-10)
bisect(h,0,2)
bisect(h,2,3)
g <- function(x){5/(x^2)+2}
graficas(g,-3,3,"6.b)")
bisect(h,2,3)
graficas <- function(g,i,d,t){
f <- function(x){x}
#g <- function(x){(2-exp(x)+x^2)/3}
h <- function(x){g(x)-f(x)}
graf <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
geom_function(fun=f,color="red",linewidth=0.75,n=200)+
geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(i,d)+
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf)
}
bisect(h,0,1)
graficas <- function(g,i,d,t){
f <- function(x){x}
#g <- function(x){(2-exp(x)+x^2)/3}
h <- function(x){g(x)-f(x)}
graf <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
geom_function(fun=f,color="red",linewidth=0.75,n=200)+
geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(i,d)+
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf)
return(h)
}
g <- function(x){(2-exp(x)+x^2)/3}
graficas(g,-2,2,"6.a)")
it_pf(g,0,pr=1e-10)
bisect(h,0,1)
graficas <- function(g,i,d,t){
f <- function(x){x}
#g <- function(x){(2-exp(x)+x^2)/3}
h <- function(x){g(x)-f(x)}
graf <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
geom_function(fun=f,color="red",linewidth=0.75,n=200)+
geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(i,d)+
labs(x="x", y="f(x)", title=t)+
theme_bw()
return(h)
ggplotly(graf)
}
g <- function(x){(2-exp(x)+x^2)/3}
h = graficas(g,-2,2,"6.a)")
g <- function(x){(2-exp(x)+x^2)/3}
h = graficas(g,-2,2,"6.a)")
g <- function(x){(2-exp(x)+x^2)/3}
graficas(g,-2,2,"6.a)")
graficas <- function(g,i,d,t){
f <- function(x){x}
#g <- function(x){(2-exp(x)+x^2)/3}
h <<- function(x){g(x)-f(x)}
graf <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
geom_function(fun=f,color="red",linewidth=0.75,n=200)+
geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(i,d)+
labs(x="x", y="f(x)", title=t)+
theme_bw()
ggplotly(graf)
}
g <- function(x){(2-exp(x)+x^2)/3}
graficas(g,-2,2,"6.a)")
it_pf(g,0,pr=1e-10)
bisect(h,0,1)
g <- function(x){5/(x^2)+2}
graficas(g,-3,3,"6.b)")
it_pf(g,0,pr=1e-10)
bisect(h,2,3)
g <- function(x){2*sin(x)}
graficas(g,-5,5,"Gráfica 4")
bisect(h,1,2.5,500)
g <- function(x){5^(-x)}
graficas(g,-2,2,"6.d)")
it_pf(g,1,pr=1e-10)
bisect(h,0,1)
g <- function(x){6^(-x)}
graficas(g,-2,2,"6.e)")
it_pf(g,1,pr=1e-10)
bisect(h,-1,1)
it_pf(g,1,pr=1e-10)
it_pf(g,0,pr=1e-10)
it_pf(g,-1,pr=1e-10)
it_pf(g,0,pr=1e-10)
it_pf(g,0.5,pr=1e-10)
bisect(h,-1,1)
# f <- function(x){x}
g <- function(x){0.5*(sin(x)+cos(x))}
graficas(g,-2,2,"6.f)")
# h <- function(x){g(x)-f(x)}
#
# graf <- ggplot()+
#   #geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#   #geom_hline(yintercept = 0, linetype="dashed")+ #eje y
#   #geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#   geom_function(fun=f,color="red",linewidth=0.75,n=200)+
#   geom_function(fun=g,color="blue",linewidth=0.75,n=200)+
#   geom_function(fun=h,color="yellow",linewidth=0.75,n=200)+
#   coord_fixed(ratio = 1)+ # misma escala en los ejes
#     xlim(-2,2)+
#   labs(x="x", y="f(x)", title="Primera gráfica")+
#   theme_bw()
#
#
# ggplotly(graf)
g <- function(x){0.5*(sin(x)+cos(x))}
graficas(g,-2,2,"6.f)")
it_pf(g,0.75,pr=1e-10)
bisect(h,0,1)
