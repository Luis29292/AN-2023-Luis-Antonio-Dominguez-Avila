knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
install.packages("pracma")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
metodo_biseccion <- function(f_x, a,b,tol, N){
cond <-  1
it <- 0
A <- a
B <- b
p <- 0
while(cond==1){
it <- it+1
if(it<=N){#if 1
p[it] <- A[it]+(B[it]-A[it])/2
tol_it <- (B[it]-A[it])/2
if( f_x(p[it])==0 | tol_it<tol){#if 2
resultados <- list(aprox=p, precision=tol_it, iteraciones=it)
return(resultados)
cond <- 0
}# end if 2
else{ #else 2
if(f_x(A[it])*f_x(p[it])<0){# if 3
A[it+1] <- A[it]
B[it+1] <- p[it]
} # end if 3
else{# else 3
A[it+1] <- p[it]
B[it+1] <- B[it]
}# end else 3
} #end else 2
}#end if 1
else{ # else 1
print("Se alcanzó el máximo de iteraciones")
cond <- 0
} # end else 1
}# While
}#Función
it_pf <- function(g, q0, pr=1e-5, N=100){
cond <- 1
it <- 1
q <- q0
while(cond==1){
if(it<=N){
q[it+1] = g(q[it]) # iteración de la función
pr_it <- abs(q[it+1]-q[it]) # precisión en la iteración
if(pr_it<pr){
resultados <- list(sucesion=q, precision=pr_it, iteraciones=it)
return(resultados)
cond <- 0
}#final del segundo if
else{it <- it+1}
}#final del primer if
else{
print("Se alcanzo el maximo de iteraciones")
cond <- 0
}#fin del else
}#final del while
}# final de la función
pm
lm
pm
pm <- 1+(2-1)/2
pm
f(1)
f <- function(x){x^3+4*x^2-10}
f(1)
f(pm)
f(2)
pm <- 1+(1.5-1)/2
pm
f(1.25)
1
pm <- 1.25+(1.5-1.25)/2
pm
metodo_biseccion <- function(f_x, a,b,tol, N){
cond <-  1
it <- 0
A <- a
B <- b
p <- 0
while(cond==1){
it <- it+1
if(it<=N){#if 1
p[it] <- A[it]+(B[it]-A[it])/2
tol_it <- (B[it]-A[it])/2
if( f_x(p[it])==0 | tol_it<tol){#if 2
resultados <- list(aprox=p, precision=tol_it, iteraciones=it)
return(resultados)
cond <- 0
}# end if 2
else{ #else 2
if(f_x(A[it])*f_x(p[it])<0){# if 3
A[it+1] <- A[it]
B[it+1] <- p[it]
} # end if 3
else{# else 3
A[it+1] <- p[it]
B[it+1] <- B[it]
}# end else 3
} #end else 2
}#end if 1
else{ # else 1
print("Se alcanzó el máximo de iteraciones")
cond <- 0
} # end else 1
}# While
}#Función
metodo_biseccion(f,1,2,0.000000000001,1000)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
f_a <- function(x){exp(x)-3*x^2}
x_a <- seq(0, 5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
f_a <- function(x){sqrt(x)-cos(x)}
x_a <- seq(0, 5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
f_a <- function(x){sqrt(x)-cos(x)}
x_a <- seq(0, 1.5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
graf_a <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_function(fun=f_a, color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(-0.5, 5)+
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
graf_a <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_function(fun=f_a, color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(0, 1.5)+
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
graf_a <- ggplot()+
#geom_vline(xintercept = 0, linetype="dashed")+ #eje x
#geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_function(fun=f_a, color="red", linewidth=1, n=200)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
xlim(0, 1.5)+
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
metodo_biseccion(f_a,0,1,00001,N=500)
metodo_biseccion(f_a,0,1,0.00001,N=500)
metodo_biseccion(f_a,0,1,1e-10,N=500)
bisect(f_a,0,1,500,1e-10)
bisect(f_a,0,1,500)
f_a <- function(x){exp(x)-x^2+3*x-2}
x_a <- seq(0, 1.5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
bisect(f_a,0,1,500)
f_a <- function(x){exp(x)-x^2+3*x-2}
x_a <- seq(-5, 5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
bisect(f_a,-5,5,500)
metodo_biseccion(f_a,0,1,1e-10,N=500)
f_a <- function(x){exp(x)-x^2+3*x-2}
x_a <- seq(-5, 5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
f_a <- function(x){x*cos(x)-2*x^2+3*x-1}
x_a <- seq(-5, 5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
f_a <- function(x){x*cos(x)-2*x^2+3*x-1}
x_a <- seq(-1, 2.5, by=0.0001)
y_a <- f_a(x_a)
graf_a <- ggplot()+
geom_vline(xintercept = 0, linetype="dashed")+ #eje x
geom_hline(yintercept = 0, linetype="dashed")+ #eje y
geom_line(aes(x=x_a, y=y_a), color="red", linewidth=1)+
#coord_fixed(ratio = 1)+ # misma escala en los ejes
labs(x="x", y="f(x)", title="Primera gráfica")+
theme_bw()
ggplotly(graf_a)
bisect(f_a,-1,1,500)
bisect(f_a,1,2,500)
